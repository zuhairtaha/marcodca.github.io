{"version":3,"sources":["../src/Routes.js"],"names":["routes","get","req","res","send","database","getAllTasks","then","result","post","title","description","created","updated","dueDate","statusID","userID","body","addTask","catch","error","put","changeTaskTitle","params","taskID","newTitle","newDate","changeTaskStatus","newStatus","markTaskAsCompleted","delete","deleteTask","deleteUser"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,SAAS,sBAAf;;AAEAA,OACKC,GADL,CACS,GADT,EACc,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpBA,QAAIC,IAAJ,CAAS,uBAAT;AAEH,CAJL;;AAMI;AANJ,CAOKH,GAPL,CAOS,WAPT,EAOsB,CAACC,GAAD,EAAMC,GAAN,KAAc;;AAE5BE,uBAASC,WAAT,GAAuBC,IAAvB,CAA6BC,MAAD,IAAY;AACpCL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAFD;AAGH,CAZL;;AAcI;AAdJ,CAeKC,IAfL,CAeU,UAfV,EAesB,CAACP,GAAD,EAAMC,GAAN,KAAc;;AAE5B,UAAM,EAAEO,KAAF,EAASC,WAAT,EAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,OAAxC,EAAiDC,QAAjD,EAA2DC,MAA3D,KAAsEd,IAAIe,IAAhF;;AAEAZ,uBAASa,OAAT,CAAiBR,KAAjB,EAAwBC,WAAxB,EAAqCC,OAArC,EAA8CC,OAA9C,EAAuDC,OAAvD,EAAgEC,QAAhE,EAA0EC,MAA1E,EACKT,IADL,CACWC,MAAD,IAAY;AACdL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAHL,EAIKW,KAJL,CAIYC,KAAD,IAAS;AAAC,cAAMA,KAAN;AAAY,KAJjC;AAKH,CAxBL;;AA0BI;AA1BJ,CA2BKC,GA3BL,CA2BS,0BA3BT,EA2BqC,CAACnB,GAAD,EAAMC,GAAN,KAAc;;AAE3CE,uBAASiB,eAAT,CAAyBpB,IAAIqB,MAAJ,CAAWC,MAApC,EAA4CtB,IAAIe,IAAJ,CAASQ,QAArD,EAEKlB,IAFL,CAEWC,MAAD,IAAY;AACdL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAJL,EAKKW,KALL,CAKYC,KAAD,IAAS;AAAC,cAAMA,KAAN;AAAY,KALjC;AAMH,CAnCL;;AAqCI;AArCJ,CAsCKC,GAtCL,CAsCS,wBAtCT,EAsCmC,CAACnB,GAAD,EAAMC,GAAN,KAAc;;AAEzCE,uBAASiB,eAAT,CAAyBpB,IAAIqB,MAAJ,CAAWC,MAApC,EAA4CtB,IAAIe,IAAJ,CAASS,OAArD,EACKnB,IADL,CACWC,MAAD,IAAY;AACdL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAHL,EAIKW,KAJL,CAIYC,KAAD,IAAS;AAAC,cAAMA,KAAN;AAAY,KAJjC;AAKH,CA7CL;;AA+CI;AA/CJ,CAgDKC,GAhDL,CAgDS,uBAhDT,EAgDkC,CAACnB,GAAD,EAAMC,GAAN,KAAY;;AAEtCE,uBAASsB,gBAAT,CAA0BzB,IAAIqB,MAAJ,CAAWC,MAArC,EAA6CtB,IAAIe,IAAJ,CAASW,SAAtD,EACKrB,IADL,CACWC,MAAD,IAAW;AACbL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAHL,EAIKW,KAJL,CAIYC,KAAD,IAAS;AAAC,cAAMA,KAAN;AAAY,KAJjC;AAKH,CAvDL;;AAyDI;AAzDJ,CA0DKC,GA1DL,CA0DS,0BA1DT,EA0DqC,CAACnB,GAAD,EAAMC,GAAN,KAAY;;AAEzCE,uBAASwB,mBAAT,CAA6B3B,IAAIqB,MAAJ,CAAWC,MAAxC,EACKjB,IADL,CACWC,MAAD,IAAW;AACbL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAHL,EAIKW,KAJL,CAIYC,KAAD,IAAS;AAAC,cAAMA,KAAN;AAAY,KAJjC;AAKH,CAjEL;;AAmEI;AAnEJ,CAoEKU,MApEL,CAoEY,qBApEZ,EAoEmC,CAAC5B,GAAD,EAAKC,GAAL,KAAW;;AAEtCE,uBAAS0B,UAAT,CAAoB7B,IAAIqB,MAAJ,CAAWC,MAA/B,EACKjB,IADL,CACWC,MAAD,IAAU;AACZL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAHL,EAIKW,KAJL,CAIYC,KAAD,IAAS;AAAC,cAAMA,KAAN;AAAY,KAJjC;AAKH,CA3EL;;AA6EQ;AA7ER,CA8ESU,MA9ET,CA8EgB,qBA9EhB,EA8EuC,CAAC5B,GAAD,EAAKC,GAAL,KAAW;;AAEtCE,uBAAS2B,UAAT,CAAoB9B,IAAIqB,MAAJ,CAAWP,MAA/B,EACKT,IADL,CACWC,MAAD,IAAU;AACZL,YAAIC,IAAJ,CAASI,MAAT;AACH,KAHL,EAIKW,KAJL,CAIYC,KAAD,IAAS;AAAC,cAAMA,KAAN;AAAY,KAJjC;AAKH,CArFT;;kBAuFepB,M","file":"Routes.js","sourcesContent":["import { Router } from 'express';\r\nimport database from './database/database'\r\n\r\nconst routes = Router();\r\n\r\nroutes\r\n    .get('/', (req, res) => {\r\n        res.send('Lets dance all night!')\r\n\r\n    })\r\n\r\n    //A get request for all the info in the task table.\r\n    .get('/allTasks', (req, res) => {\r\n\r\n        database.getAllTasks().then((result) => {\r\n            res.send(result);\r\n        })\r\n    })\r\n\r\n    //A post request to add a task.\r\n    .post('/addTask', (req, res) => {\r\n\r\n        const { title, description, created, updated, dueDate, statusID, userID } = req.body;\r\n\r\n        database.addTask(title, description, created, updated, dueDate, statusID, userID)\r\n            .then((result) => {\r\n                res.send(result);\r\n            })\r\n            .catch((error)=>{throw error})\r\n    })\r\n\r\n    //A put request for updating a task title\r\n    .put('/changeTaskTitle/:taskID', (req, res) => {\r\n\r\n        database.changeTaskTitle(req.params.taskID, req.body.newTitle)\r\n\r\n            .then((result) => {\r\n                res.send(result);\r\n            })\r\n            .catch((error)=>{throw error})\r\n    })\r\n\r\n    //A put request for updating a task due date\r\n    .put('/changeDueDate/:taskID', (req, res) => {\r\n      \r\n        database.changeTaskTitle(req.params.taskID, req.body.newDate)\r\n            .then((result) => {\r\n                res.send(result)\r\n            })\r\n            .catch((error)=>{throw error})\r\n    })\r\n\r\n    //A put request for updating a task status\r\n    .put('/changeStatus/:taskID', (req, res)=>{\r\n\r\n        database.changeTaskStatus(req.params.taskID, req.body.newStatus)\r\n            .then((result) =>{\r\n                res.send(result)\r\n            })\r\n            .catch((error)=>{throw error})\r\n    })\r\n\r\n    //A put request for marking a task as complete.\r\n    .put('/markAsCompleted/:taskID', (req, res)=>{\r\n\r\n        database.markTaskAsCompleted(req.params.taskID)\r\n            .then((result) =>{\r\n                res.send(result)\r\n            })\r\n            .catch((error)=>{throw error})\r\n    })\r\n\r\n    //A delete request for deleting a task\r\n    .delete('/deleteTask/:taskID', (req,res)=>{\r\n        \r\n        database.deleteTask(req.params.taskID)\r\n            .then((result)=>{\r\n                res.send(result)\r\n            })\r\n            .catch((error)=>{throw error})\r\n    })\r\n\r\n        //A delete request for deleting a task\r\n        .delete('/deleteUser/:userID', (req,res)=>{\r\n        \r\n            database.deleteUser(req.params.userID)\r\n                .then((result)=>{\r\n                    res.send(result)\r\n                })\r\n                .catch((error)=>{throw error})\r\n        })\r\n\r\nexport default routes;\r\n"]}